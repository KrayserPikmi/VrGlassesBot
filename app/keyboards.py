from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.database.requests import get_categories, get_items_by_category, get_rents, get_user_favorites


menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥', callback_data='catalog')],
    [InlineKeyboardButton(text='–ò–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data='favourites'),
     InlineKeyboardButton(text='–ù–∞—à –∞–¥—Ä–µ—Å', callback_data='geolocation')],
    [InlineKeyboardButton(text='–°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', callback_data='cooperation'),
     InlineKeyboardButton(text='–¢–µ—Å—Ç –¥—Ä–∞–π–≤—ã', callback_data='testdrives')],
    [InlineKeyboardButton(text='–°–æ—Ü—Å–µ—Ç–∏', callback_data='socialnetwork'),
     InlineKeyboardButton(text='–ê—Ä–µ–Ω–¥–∞', callback_data='rent')]
])


btm = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥', callback_data='back_to_menu')]
])


async def categories():
    all_categories = await get_categories()
    keyboard = InlineKeyboardBuilder()
    for category in all_categories:
        keyboard.row(InlineKeyboardButton(text=category.name, callback_data=f'category_{category.id}'))
    keyboard.row(InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥', callback_data='start'))
    return keyboard.as_markup()


async def get_items(category_id):
    all_items = await get_items_by_category(category_id)
    keyboard = InlineKeyboardBuilder()
    for items in all_items:
        keyboard.row(InlineKeyboardButton(text=items.name, callback_data=f'item_{items.id}'))
    keyboard.row(InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='catalog'))
    return keyboard.as_markup()


async def rents():
    all_rents = await get_rents()
    keyboard = InlineKeyboardBuilder()
    for rent in all_rents:
        keyboard.row(InlineKeyboardButton(text=rent.name, callback_data=f"rent_{rent.id}"))
    keyboard.row(InlineKeyboardButton(text="<< –ù–∞–∑–∞–¥", callback_data="start"))
    return keyboard.as_markup()



async def back_to_rents():
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="<< –ù–∞–∑–∞–¥ –∫ –∞—Ä–µ–Ω–¥–µ", callback_data="btrents"))
    return keyboard.as_markup()
    

async def back_to_category(category_id):
    return InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥', callback_data=f'category_{category_id}')]])


async def item_keyboard(tg_id, item_id, category_id):
    favorites = await get_user_favorites(tg_id)
    is_fav = any(item.id == item_id for item in favorites)
    keyboard = InlineKeyboardBuilder()
    if is_fav:
        keyboard.row(InlineKeyboardButton(text='üíî', callback_data=f'fav_rm_{item_id}'))
    else:
        keyboard.row(InlineKeyboardButton(text='‚ù§Ô∏è', callback_data=f'fav_add_{item_id}'))
    keyboard.row(InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥', callback_data=f'category_{category_id}'))
    return keyboard.as_markup()


async def favourites_keyboard(tg_id):
    favorites = await get_user_favorites(tg_id)
    keyboard = InlineKeyboardBuilder()
    if favorites:
        for item in favorites:
            item_name = item.name[:30] + '...' if len(item.name) > 30 else item.name
            keyboard.row(InlineKeyboardButton(text=f'{item_name}',
                    callback_data=f'item_{item.id}'))
    else:
        keyboard.row(InlineKeyboardButton(text='–£ –≤–∞—Å –Ω–µ—Ç –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤', callback_data='ignore'))
    keyboard.row(InlineKeyboardButton(text='<< –ù–∞–∑–∞–¥', callback_data='start'))
    return keyboard.as_markup()